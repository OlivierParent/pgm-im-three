{"version":3,"sources":["App/components/Animation/animation.glb","App/components/Animation/index.jsx","App/components/Cube/index.jsx","App/utils/MathCircle/index.js","App/components/Clock/Analogue.jsx","App/components/Clock/Digital.jsx","App/components/Image/UV_Grid_Sm.jpg","App/components/Image/index.jsx","App/components/SvgLoader/Shape.jsx","App/components/SvgLoader/Group.jsx","App/components/SvgLoader/index.jsx","App/components/Image/Svg.jsx","App/lib/MatCap/index.js","App/lib/FontFamily/index.js","App/components/LoremIpsum/index.jsx","App/components/Normals/normals.glb","App/components/Normals/index.jsx","App/components/Suzanne/assets/suzanne.glb","App/components/Suzanne/index.jsx","App/components/Suzanne/MatcapTexture.jsx","App/components/Suzanne/NormalTexture.jsx","App/components/Suzanne/PhysicalMaterial.jsx","App/components/Suzanne/StandardMaterial.jsx","App/components/Suzanne/ToonMaterial.jsx","App/components/Lighting/index.jsx","App/components/Lighting/indexGui.jsx","App/components/Lighting/Studio.jsx","App/components/Lighting/StudioGui.jsx","App/components/Lighting/ThreePoint.jsx","App/components/Lighting/ThreePointGui.jsx","App/Content.jsx","App/index.jsx","reportWebVitals.js","index.jsx"],"names":["Animation","useGLTF","animationGlb","animations","scene","animationRef","useRef","mixer","useMemo","AnimationMixer","useEffect","current","clipAction","play","useFrame","state","delta","update","object","ref","Cube","useState","toggle","setToggle","color","position","cubeRef","rotation","x","y","z","onClick","MathUtils","degToRad","args","opacity","transparent","MathCircle","radius","this","degrees","angle","Math","cos","sin","CLOCK","HAND","HH","COLOR","LENGTH","MM","SS","THICKNESS","ClockAnalogue","props","clockRef","handHoursRef","handMinutesRef","handSecondsRef","d","Date","getHours","getMinutes","getSeconds","fontSize","side","DoubleSide","Text","map","deg","value","Array","fill","index","getCoordinates","scale","ClockDigital","text","toLocaleTimeString","Image","texture","useTexture","uvGrid","offset","Vector2","repeat","center","SvgLoaderShape","shape","SvgLoaderGroup","paths","console","log","v","path","shapes","toShapes","pathIndex","Shape","SvgLoader","setPaths","Promise","resolve","SVGLoader","load","source","data","then","Group","ImageSvg","MatCap","id","GREEN","size","XS","SM","MD","LG","XL","FontFamily","Architects_Daughter","Crimson_Pro","Lukiest_Guy","Press_Start_2P","Roboto_Slab","LoremIpsum","useMatcapTexture","matcap","font","Normals","normalsGlb","normalsRef","Suzanne","suzanneGlb","nodes","materials","geometry","material","SuzanneMatcapTexture","SuzanneNormalTexture","useNormalTexture","anisotropy","normalMap","SuzannePhysicalMaterial","useControls","dithering","label","max","min","emissive","emissiveIntensity","metalness","refractionRatio","roughness","wireframe","clearcoat","clearcoatRoughness","ior","reflectivity","sheen","sheenRoughness","sheenTint","specularIntensity","specularTint","thickness","transmission","SuzanneStandardMaterial","SuzanneToonMaterial","Lighting","intensity","castShadow","penumbra","LightingGui","directionalLightColor","directionalLightIntensity","directionalLightPosition","pointLightColor","pointLightIntensity","pointLightPosition","spotLightColor","spotLightIntensity","spotLightPenumbra","spotLightPosition","spotLightTarget","useThree","target","Object3D","add","directionalLightRef","pointLightRef","spotLightRef","useHelper","DirectionalLightHelper","PointLightHelper","SpotLightHelper","translateX","translateZ","LightingStudio","LightingStudioGui","ambientLightIntensity","frontLightColor","frontLightIntensity","leftLightColor","leftLightIntensity","rightLightColor","rightLightIntensity","frontLightRef","leftLightRef","rightLightRef","LightingThreePoint","LightingThreePointGui","backLightColor","backLightIntensity","fillLightColor","fillLightIntensity","keyLightColor","keyLightIntensity","backLightRef","fillLightRef","keyLightRef","components","lightings","Content","showStats","showAxesHelper","showGridHelper","useComponent","options","useLighting","useLightingGui","showComponent","name","showLighting","OrbitControls","enablePan","enableRotate","enableZoom","Stats","fallback","App","linear","shadows","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9894124.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/animation.07175b80.glb\";","import { useMemo, useRef } from \"react\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\n\r\nimport animationGlb from \"./animation.glb\";\r\nimport { useEffect } from \"react/cjs/react.development\";\r\nimport { AnimationMixer } from \"three\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\n\r\nconst Animation = () => {\r\n  const { animations, scene } = useGLTF(animationGlb, true);\r\n  const animationRef = useRef();\r\n  const mixer = useMemo(() => new AnimationMixer(), []);\r\n\r\n  useEffect(() => {\r\n    if (animationRef.current) {\r\n      mixer.clipAction(animations[0], animationRef.current).play();\r\n    }\r\n  }, [animations, mixer]);\r\n\r\n  useFrame((state, delta) => {\r\n    mixer.update(delta);\r\n  });\r\n\r\n  return <primitive object={scene} ref={animationRef} />;\r\n};\r\n\r\nexport default Animation;\r\n","import { useRef, useState } from \"react\";\r\nimport { MathUtils } from \"three\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\n\r\nconst Cube = () => {\r\n  const [toggle, setToggle] = useState(true);\r\n  const color = toggle ? 0xff0000 : 0x00ff00;\r\n  const position = toggle ? [0, 0, 0] : [1, 1, 0];\r\n  const cubeRef = useRef();\r\n\r\n  useFrame(() => {\r\n    cubeRef.current.rotation.x += 0.01;\r\n    cubeRef.current.rotation.y += 0.01;\r\n    cubeRef.current.rotation.z += 0.01;\r\n  });\r\n\r\n  return (\r\n    <mesh\r\n      onClick={() => setToggle(!toggle)}\r\n      position={position}\r\n      ref={cubeRef}\r\n      rotation={[MathUtils.degToRad(45), 0, 0]}\r\n    >\r\n      <boxGeometry args={[1, 1, 1]} />\r\n      <meshBasicMaterial color={color} opacity={0.5} transparent={true} />\r\n    </mesh>\r\n  );\r\n};\r\n\r\nexport default Cube;\r\n","import { MathUtils } from \"three\";\r\n\r\nclass MathCircle {\r\n  #radius = 1;\r\n  #angle = 0;\r\n\r\n  constructor(radius = 1) {\r\n    this.#radius = radius;\r\n  }\r\n\r\n  get angle() {\r\n    return this.#angle;\r\n  }\r\n\r\n  set angle(degrees) {\r\n    this.#angle = MathUtils.degToRad(degrees);\r\n  }\r\n\r\n  getCoordinates(degrees) {\r\n    this.angle = degrees;\r\n    const x = Math.cos(this.angle) * this.#radius;\r\n    const y = Math.sin(this.angle) * this.#radius;\r\n\r\n    return { x, y };\r\n  }\r\n}\r\n\r\nexport default MathCircle;\r\n","import { useRef } from \"react\";\r\nimport { DoubleSide, MathUtils } from \"three\";\r\nimport { Box, Circle, Cone, Text } from \"@react-three/drei\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport MathCircle from \"../../utils/MathCircle\";\r\n\r\nconst HH = 12;\r\nconst MM = 60;\r\nconst SS = 60;\r\n\r\nconst CLOCK = {\r\n  SIZE: 3,\r\n};\r\n\r\nconst HAND = {\r\n  HH: {\r\n    COLOR: 0xffffff,\r\n    LENGTH: 0.6,\r\n  },\r\n  MM: {\r\n    COLOR: 0xffffff,\r\n    LENGTH: 0.7,\r\n  },\r\n  SS: {\r\n    COLOR: 0xffcc66,\r\n    LENGTH: 0.9,\r\n  },\r\n  THICKNESS: 0.02,\r\n};\r\n\r\nconst ClockAnalogue = (props) => {\r\n  const clockRef = useRef();\r\n  const handHoursRef = useRef();\r\n  const handMinutesRef = useRef();\r\n  const handSecondsRef = useRef();\r\n\r\n  useFrame(() => {\r\n    const d = new Date();\r\n\r\n    if (clockRef.current) {\r\n      //   clockRef.current.text = new Date().toLocaleTimeString();\r\n    }\r\n    if (handHoursRef.current) {\r\n      handHoursRef.current.rotation.z = MathUtils.degToRad(\r\n        d.getHours() * -(360 / HH),\r\n      );\r\n    }\r\n    if (handMinutesRef.current) {\r\n      handMinutesRef.current.rotation.z = MathUtils.degToRad(\r\n        d.getMinutes() * -(360 / MM),\r\n      );\r\n    }\r\n    if (handSecondsRef.current) {\r\n      handSecondsRef.current.rotation.z = MathUtils.degToRad(\r\n        d.getSeconds() * -(360 / SS),\r\n      );\r\n    }\r\n  });\r\n\r\n  return (\r\n    <group fontSize={2} ref={clockRef} {...props}>\r\n      <group position={[0, 0, -0.01]}>\r\n        <Circle args={[CLOCK.SIZE, 60]}>\r\n          <meshBasicMaterial side={DoubleSide} />\r\n        </Circle>\r\n      </group>\r\n      <group position={[0, -1, 0]}>\r\n        <Text color={\"black\"} fontSize={0.25}>\r\n          GraPGM\r\n        </Text>\r\n      </group>\r\n      <group rotation={[90, 0, 0].map((deg) => MathUtils.degToRad(deg))}>\r\n        {/* radius : Float, height : Float, radialSegments : Integer, heightSegments : Integer, openEnded : Boolean, thetaStart : Float, thetaLength : Float */}\r\n        <Cone args={[0.2, 0.5, 12]} />\r\n      </group>\r\n      <group rotation={[0, 0, 90].map((deg) => MathUtils.degToRad(deg))}>\r\n        <group ref={handMinutesRef}>\r\n          <Box\r\n            args={[HAND.MM.LENGTH, HAND.THICKNESS * 2, HAND.THICKNESS].map(\r\n              (value) => value * CLOCK.SIZE,\r\n            )}\r\n            position={[HAND.MM.LENGTH / 2, 0, HAND.THICKNESS * 1 * 1.5].map(\r\n              (value) => value * CLOCK.SIZE,\r\n            )}\r\n          >\r\n            <meshBasicMaterial color=\"red\" />\r\n          </Box>\r\n        </group>\r\n        <group ref={handHoursRef}>\r\n          <Box\r\n            args={[HAND.HH.LENGTH, HAND.THICKNESS * 3, HAND.THICKNESS].map(\r\n              (value) => value * CLOCK.SIZE,\r\n            )}\r\n            position={[HAND.HH.LENGTH / 2, 0, HAND.THICKNESS * 2 * 1.5].map(\r\n              (value) => value * CLOCK.SIZE,\r\n            )}\r\n          >\r\n            <meshBasicMaterial color=\"green\" />\r\n          </Box>\r\n        </group>\r\n        <group ref={handSecondsRef}>\r\n          <Box\r\n            args={[HAND.SS.LENGTH, HAND.THICKNESS, HAND.THICKNESS].map(\r\n              (value) => value * CLOCK.SIZE,\r\n            )}\r\n            position={[HAND.SS.LENGTH / 2, 0, HAND.THICKNESS * 3 * 1.5].map(\r\n              (value) => value * CLOCK.SIZE,\r\n            )}\r\n          >\r\n            <meshBasicMaterial color=\"blue\" />\r\n          </Box>\r\n        </group>\r\n      </group>\r\n      <group>\r\n        {Array(HH)\r\n          .fill(null)\r\n          .map((value, index) => {\r\n            const c = new MathCircle(CLOCK.SIZE - 0.3);\r\n            const angle = (index * 360) / HH + 90;\r\n            const { x, y } = c.getCoordinates(angle);\r\n            return (\r\n              <Text\r\n                color=\"black\"\r\n                key={index}\r\n                position={[x, y, 0.01]}\r\n                scale={Array(3).fill(2)}\r\n              >\r\n                {12 - index}\r\n              </Text>\r\n            );\r\n          })}\r\n      </group>\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default ClockAnalogue;\r\n","import { useEffect, useRef } from \"react\";\r\nimport { MathUtils } from \"three\";\r\nimport { Text } from \"@react-three/drei\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\n\r\nconst ClockDigital = (props) => {\r\n  const clockRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (clockRef.current) {\r\n      clockRef.current.rotation.x = MathUtils.degToRad(-30);\r\n    }\r\n  }, []);\r\n\r\n  useFrame(() => {\r\n    if (clockRef.current) {\r\n      clockRef.current.text = new Date().toLocaleTimeString();\r\n    }\r\n  });\r\n\r\n  return <Text fontSize={2} ref={clockRef} {...props} />;\r\n};\r\n\r\nexport default ClockDigital;\r\n","export default __webpack_public_path__ + \"static/media/UV_Grid_Sm.8ab40f71.jpg\";","import { DoubleSide, Vector2 } from \"three\";\r\nimport { useTexture } from \"@react-three/drei\";\r\n\r\nimport uvGrid from \"./UV_Grid_Sm.jpg\";\r\n\r\nconst Image = () => {\r\n  const texture = useTexture(uvGrid);\r\n  texture.offset = new Vector2(0, 0);\r\n  texture.repeat = new Vector2(0.5, 0.5);\r\n\r\n  return (\r\n    <mesh>\r\n      <meshStandardMaterial center map={texture} side={DoubleSide} />\r\n      <planeGeometry args={[1, 1]} />\r\n    </mesh>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","import { DoubleSide } from \"three\";\r\n\r\nconst SvgLoaderShape = ({ color, index, shape }) => {\r\n  return (\r\n    <mesh position={[0, 0, -0.05 * index]}>\r\n      <shapeGeometry args={[shape]} />\r\n      <meshStandardMaterial color={color} side={DoubleSide} />\r\n    </mesh>\r\n  );\r\n};\r\n\r\nexport default SvgLoaderShape;\r\n","import { MathUtils } from \"three\";\r\nimport Shape from \"./Shape\";\r\n\r\nconst SvgLoaderGroup = ({ paths, position, scale }) => {\r\n  console.log(\"PATHS\", paths);\r\n  return (\r\n    <group\r\n      position={position}\r\n      rotation={[180, 0, 0].map((v) => MathUtils.degToRad(v))}\r\n      scale={scale}\r\n    >\r\n      {paths.map((path, index) => {\r\n        const shapes = path.toShapes();\r\n        const pathIndex = index;\r\n\r\n        return shapes.map((shape, index) => {\r\n          return (\r\n            <Shape\r\n              color={path.color}\r\n              index={index + pathIndex}\r\n              key={index}\r\n              shape={shape}\r\n            />\r\n          );\r\n        });\r\n      })}\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default SvgLoaderGroup;\r\n","import { useEffect, useState } from \"react\";\r\nimport { SVGLoader } from \"three-stdlib\";\r\n\r\nimport Group from \"./Group\";\r\n\r\nconst SvgLoader = (props) => {\r\n  const [paths, setPaths] = useState([]);\r\n  const position = props.position;\r\n  const scale = [props.scale, props.scale, props.scale];\r\n\r\n  useEffect(() => {\r\n    const svgResource = new Promise((resolve) => {\r\n      new SVGLoader().load(props.source, (data) => {\r\n        resolve(data.paths);\r\n      });\r\n    });\r\n    svgResource.then(setPaths);\r\n  }, [props]);\r\n\r\n  return <Group paths={paths} position={position} scale={scale} />;\r\n};\r\n\r\nexport default SvgLoader;\r\n","import SvgLoader from \"../SvgLoader\";\r\n\r\nconst svgLogoUrl =\r\n  \"https://upload.wikimedia.org/wikipedia/commons/0/02/SVG_logo.svg\";\r\n\r\nconst ImageSvg = () => {\r\n  return (\r\n    <>\r\n      <SvgLoader position={[0, 0, 0]} scale={0.075} source={svgLogoUrl} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImageSvg;\r\n","// https://github.com/emmelleppi/matcaps\r\nconst MatCap = {\r\n  id: {\r\n    GREEN: \"54C104_BBFA0F_97EF04_7AE104\",\r\n  },\r\n  size: {\r\n    XS: 64,\r\n    SM: 128,\r\n    MD: 256,\r\n    LG: 512,\r\n    XL: 1024,\r\n  },\r\n};\r\n\r\nexport default MatCap;\r\n","const FontFamily = {\r\n  Architects_Daughter:\r\n    \"https://fonts.gstatic.com/s/architectsdaughter/v11/KtkxAKiDZI_td1Lkx62xHZHDtgO_Y-bvfY0.woff\",\r\n  Crimson_Pro:\r\n    \"https://fonts.gstatic.com/s/crimsonpro/v14/q5uUsoa5M_tv7IihmnkabC5XiXCAlXGks1WZzm18Ow.woff\",\r\n  Lukiest_Guy:\r\n    \"https://fonts.gstatic.com/s/luckiestguy/v11/_gP_1RrxsjcxVyin9l9n_j2RSQ.woff\",\r\n  Press_Start_2P:\r\n    \"https://fonts.gstatic.com/s/pressstart2p/v9/e3t4euO8T-267oIAQAu6jDQyK0nR.woff\",\r\n  Roboto_Slab:\r\n    \"https://fonts.gstatic.com/s/robotoslab/v12/BngbUXZYTXPIvIBgJJSb6s3BzlRRfKOFbvjovoSWaw.woff\",\r\n};\r\n\r\nexport default FontFamily;\r\n","import { DoubleSide } from \"three\";\r\nimport { Text, useMatcapTexture } from \"@react-three/drei\";\r\n\r\nimport MatCap from \"../../lib/MatCap\";\r\nimport FontFamily from \"../../lib/FontFamily\";\r\n\r\nconst LoremIpsum = () => {\r\n  const [matcap] = useMatcapTexture(MatCap.id.GREEN, MatCap.size.XL);\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize={1}>\r\n        Lorem ipsum sid dolor amet.\r\n        <meshMatcapMaterial matcap={matcap} side={DoubleSide} />\r\n      </Text>\r\n      <Text\r\n        fontSize={1}\r\n        font={FontFamily.Architects_Daughter}\r\n        position={[0, 1, 0]}\r\n      >\r\n        Lorem ipsum sid dolor amet.\r\n        <meshMatcapMaterial matcap={matcap} side={DoubleSide} />\r\n      </Text>\r\n      <Text fontSize={1} font={FontFamily.Press_Start_2P} position={[0, -1, 0]}>\r\n        Lorem ipsum sid dolor amet.\r\n        <meshBasicMaterial color={0x0000ff} />\r\n      </Text>\r\n      <Text fontSize={1} font={FontFamily.Lukiest_Guy} position={[0, -2, 0]}>\r\n        Lorem ipsum sid dolor amet.\r\n        <meshBasicMaterial color={0x00ff00} />\r\n      </Text>\r\n      <Text fontSize={1} font={FontFamily.Crimson_Pro} position={[0, -3, 0]}>\r\n        Lorem ipsum sid dolor amet.\r\n        <meshBasicMaterial color={0xff0000} side={DoubleSide} />\r\n      </Text>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoremIpsum;\r\n","export default __webpack_public_path__ + \"static/media/normals.c5aed970.glb\";","import { useRef } from \"react\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\n\r\nimport normalsGlb from \"./normals.glb\";\r\n\r\nconst Normals = () => {\r\n  const { scene } = useGLTF(normalsGlb, true);\r\n  const normalsRef = useRef();\r\n\r\n  useFrame(() => {\r\n    if (normalsRef.current) {\r\n      normalsRef.current.rotation.x += 0.02;\r\n    }\r\n  });\r\n\r\n  return <primitive object={scene} ref={normalsRef} />;\r\n};\r\n\r\nexport default Normals;\r\n","export default __webpack_public_path__ + \"static/media/suzanne.2b4b9514.glb\";","import { useGLTF } from \"@react-three/drei\";\r\n\r\nimport suzanneGlb from \"./assets/suzanne.glb\";\r\n\r\nconst Suzanne = () => {\r\n  const { nodes, materials } = useGLTF(suzanneGlb, true);\r\n\r\n  return (\r\n    <group>\r\n      <mesh geometry={nodes.Suzanne.geometry} material={materials[\"Paars\"]} />\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default Suzanne;\r\n","import { useGLTF, useMatcapTexture } from \"@react-three/drei\";\r\n\r\nimport MatCap from \"../../lib/MatCap\";\r\nimport suzanneGlb from \"./assets/suzanne.glb\";\r\n\r\nconst SuzanneMatcapTexture = () => {\r\n  const { nodes } = useGLTF(suzanneGlb, true);\r\n  const [matcap] = useMatcapTexture(MatCap.id.GREEN, MatCap.size.XL);\r\n\r\n  return (\r\n    <group>\r\n      <mesh geometry={nodes.Suzanne.geometry}>\r\n        <meshMatcapMaterial matcap={matcap} />\r\n      </mesh>\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default SuzanneMatcapTexture;\r\n","import { useGLTF, useNormalTexture } from \"@react-three/drei\";\r\n\r\nimport suzanneGlb from \"./assets/suzanne.glb\";\r\n\r\nconst SuzanneNormalTexture = () => {\r\n  const { nodes } = useGLTF(suzanneGlb, true);\r\n  const [normalMap] = useNormalTexture(\r\n    8, // https://github.com/emmelleppi/normal-maps/blob/master/normals.json\r\n    {\r\n      anisotropy: 8,\r\n      offset: [0, 0],\r\n      repeat: [10, 10],\r\n    },\r\n  );\r\n\r\n  return (\r\n    <group>\r\n      <mesh geometry={nodes.Suzanne.geometry}>\r\n        <meshStandardMaterial color={0xff0000} normalMap={normalMap} />\r\n      </mesh>\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default SuzanneNormalTexture;\r\n","import { MathUtils } from \"three\";\r\nimport { Plane, useGLTF } from \"@react-three/drei\";\r\nimport { useControls } from \"leva\";\r\n\r\nimport suzanneGlb from \"./assets/suzanne.glb\";\r\n\r\nconst SuzannePhysicalMaterial = () => {\r\n  const { nodes } = useGLTF(suzanneGlb, true);\r\n\r\n  const { dithering, opacity, transparent } = useControls(\"Material\", {\r\n    dithering: { label: \"Dithering\", value: false },\r\n    opacity: { label: \"Opacity\", max: 1, min: 0, value: 1 },\r\n    transparent: { label: \"Transparent\", value: false },\r\n  });\r\n\r\n  const {\r\n    color,\r\n    emissive,\r\n    emissiveIntensity,\r\n    metalness,\r\n    refractionRatio,\r\n    roughness,\r\n    wireframe,\r\n  } = useControls(\"StandardMaterial\", {\r\n    color: { label: \"Color\", value: \"#ffffff\" },\r\n    emissive: { label: \"Emissive\", value: \"#000000\" },\r\n    emissiveIntensity: {\r\n      label: \"Emissive Intensity\",\r\n      max: 5,\r\n      min: 0,\r\n      value: 1,\r\n    },\r\n    metalness: { label: \"Metalness\", max: 1, min: 0, value: 0 },\r\n    refractionRatio: {\r\n      label: \"Refraction Ratio\",\r\n      max: 2,\r\n      min: 0,\r\n      value: 0.98,\r\n    },\r\n    roughness: { label: \"Roughness\", max: 1, min: 0, value: 1 },\r\n    wireframe: { label: \"Wireframe\", value: false },\r\n  });\r\n\r\n  const {\r\n    clearcoat,\r\n    clearcoatRoughness,\r\n    ior,\r\n    reflectivity,\r\n    sheen,\r\n    sheenRoughness,\r\n    sheenTint,\r\n    specularIntensity,\r\n    specularTint,\r\n    thickness,\r\n    transmission,\r\n  } = useControls(\"Physical Material\", {\r\n    clearcoat: { label: \"Clearcoat\", max: 1, min: 0, value: 0 },\r\n    clearcoatRoughness: {\r\n      label: \"Clearcoat Roughness\",\r\n      max: 1,\r\n      min: 0,\r\n      value: 0,\r\n    },\r\n    ior: { label: \"Index of Refraction\", max: 2.333, min: 1, value: 1.5 },\r\n    reflectivity: { label: \"Reflectivity\", max: 1, min: 0, value: 0.5 },\r\n    sheen: { label: \"Sheen\", max: 1, min: 0, value: 0 },\r\n    sheenRoughness: { label: \"Sheen Roughness\", max: 1, min: 0, value: 1 },\r\n    sheenTint: { label: \"Sheen Tint\", value: \"#ffffff\" },\r\n    specularIntensity: {\r\n      label: \"Specular Intensity\",\r\n      max: 1,\r\n      min: 0,\r\n      value: 1,\r\n    },\r\n    specularTint: { label: \"Specular Tint\", value: \"#ffffff\" },\r\n    thickness: { label: \"Thickness\", max: 10, min: 0, value: 0.01 },\r\n    transmission: { label: \"Transmission\", max: 1, min: 0, value: 0 },\r\n  });\r\n\r\n  return (\r\n    <group>\r\n      <mesh geometry={nodes.Suzanne.geometry}>\r\n        <meshPhysicalMaterial\r\n          color={color}\r\n          clearcoat={clearcoat}\r\n          clearcoatRoughness={clearcoatRoughness}\r\n          emissive={emissive}\r\n          emissiveIntensity={emissiveIntensity}\r\n          dithering={dithering}\r\n          ior={ior}\r\n          metalness={metalness}\r\n          opacity={opacity}\r\n          reflectivity={reflectivity}\r\n          refractionRatio={refractionRatio}\r\n          roughness={roughness}\r\n          transparent={transparent}\r\n          sheen={sheen}\r\n          sheenRoughness={sheenRoughness}\r\n          sheenTint={sheenTint}\r\n          specularIntensity={specularIntensity}\r\n          specularTint={specularTint}\r\n          thickness={thickness}\r\n          transmission={transmission}\r\n          wireframe={wireframe}\r\n        />\r\n      </mesh>\r\n      <Plane\r\n        args={[2, 2]}\r\n        position={[0, 0, -1]}\r\n        rotation={[0, 0, 45].map((v) => MathUtils.degToRad(v))}\r\n      />\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default SuzannePhysicalMaterial;\r\n","import { MathUtils } from \"three\";\r\nimport { Plane, useGLTF } from \"@react-three/drei\";\r\nimport { useControls } from \"leva\";\r\n\r\nimport suzanneGlb from \"./assets/suzanne.glb\";\r\n\r\nconst SuzanneStandardMaterial = () => {\r\n  const { nodes } = useGLTF(suzanneGlb, true);\r\n\r\n  const { dithering, opacity, transparent } = useControls(\"Material\", {\r\n    dithering: { label: \"Dithering\", value: false },\r\n    opacity: { label: \"Opacity\", max: 1, min: 0, value: 1 },\r\n    transparent: { label: \"Transparent\", value: false },\r\n  });\r\n\r\n  const {\r\n    color,\r\n    emissive,\r\n    emissiveIntensity,\r\n    metalness,\r\n    refractionRatio,\r\n    roughness,\r\n    wireframe,\r\n  } = useControls(\"StandardMaterial\", {\r\n    color: { label: \"Color\", value: \"#ffffff\" },\r\n    emissive: { label: \"Emissive\", value: \"#000000\" },\r\n    emissiveIntensity: {\r\n      label: \"Emissive Intensity\",\r\n      max: 5,\r\n      min: 0,\r\n      value: 1,\r\n    },\r\n    metalness: { label: \"Metalness\", max: 1, min: 0, value: 0 },\r\n    refractionRatio: {\r\n      label: \"Refraction Ratio\",\r\n      max: 2,\r\n      min: 0,\r\n      value: 0.98,\r\n    },\r\n    roughness: { label: \"Roughness\", max: 1, min: 0, value: 1 },\r\n    wireframe: { label: \"Wireframe\", value: false },\r\n  });\r\n\r\n  return (\r\n    <group>\r\n      <mesh geometry={nodes.Suzanne.geometry}>\r\n        <meshStandardMaterial\r\n          color={color}\r\n          emissive={emissive}\r\n          emissiveIntensity={emissiveIntensity}\r\n          dithering={dithering}\r\n          metalness={metalness}\r\n          opacity={opacity}\r\n          refractionRatio={refractionRatio}\r\n          roughness={roughness}\r\n          transparent={transparent}\r\n          wireframe={wireframe}\r\n        />\r\n      </mesh>\r\n      <Plane\r\n        args={[2, 2]}\r\n        position={[0, 0, -1]}\r\n        rotation={[0, 0, 45].map((v) => MathUtils.degToRad(v))}\r\n      />\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default SuzanneStandardMaterial;\r\n","import { useGLTF } from \"@react-three/drei\";\r\n\r\nimport suzanneGlb from \"./assets/suzanne.glb\";\r\n\r\nconst SuzanneToonMaterial = () => {\r\n  const { nodes } = useGLTF(suzanneGlb, true);\r\n\r\n  return (\r\n    <group>\r\n      <mesh geometry={nodes.Suzanne.geometry}>\r\n        <meshToonMaterial />\r\n      </mesh>\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default SuzanneToonMaterial;\r\n","import { MathUtils } from \"three\";\r\n\r\nconst Lighting = () => {\r\n  return (\r\n    <>\r\n      <ambientLight color={0xffffff} intensity={0.1} />\r\n      <pointLight\r\n        castShadow={true}\r\n        color={0xffcc77}\r\n        intensity={0.5}\r\n        position={[-4, 1, -4]}\r\n      />\r\n      <spotLight\r\n        angle={MathUtils.degToRad(30)}\r\n        castShadow={true}\r\n        color={0xffcc77}\r\n        intensity={0.5}\r\n        penumbra={0.5}\r\n        position={[0, 4, 0]}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Lighting;\r\n","import { useRef } from \"react\";\r\nimport {\r\n  DirectionalLightHelper,\r\n  MathUtils,\r\n  Object3D,\r\n  PointLightHelper,\r\n  SpotLightHelper,\r\n} from \"three\";\r\nimport { useControls } from \"leva\";\r\nimport { useHelper } from \"@react-three/drei\";\r\nimport { useFrame, useThree } from \"@react-three/fiber\";\r\n\r\nconst LightingGui = () => {\r\n  const {\r\n    directionalLightColor,\r\n    directionalLightIntensity,\r\n    directionalLightPosition,\r\n  } = useControls(\"Lighting - Directional Light\", {\r\n    directionalLightColor: { label: \"Color\", value: \"#ffffff\" },\r\n    directionalLightIntensity: {\r\n      label: \"Intensity\",\r\n      max: 20,\r\n      min: 0,\r\n      value: 0.5,\r\n    },\r\n    directionalLightPosition: { label: \"Position XZ\", value: { x: 4, z: 1 } },\r\n  });\r\n  const { pointLightColor, pointLightIntensity, pointLightPosition } =\r\n    useControls(\"Lighting - Point Light\", {\r\n      pointLightColor: { label: \"Color\", value: \"#ffcc77\" },\r\n      pointLightIntensity: { label: \"Intensity\", max: 20, min: 0, value: 0.5 },\r\n      pointLightPosition: { label: \"Position XZ\", value: { x: -4, z: -4 } },\r\n    });\r\n  const {\r\n    spotLightColor,\r\n    spotLightIntensity,\r\n    spotLightPenumbra,\r\n    spotLightPosition,\r\n    spotLightTarget,\r\n  } = useControls(\"Lighting - Spotlight\", {\r\n    spotLightColor: { label: \"Color\", value: \"#ffcc77\" },\r\n    spotLightIntensity: { label: \"Intensity\", max: 20, min: 0, value: 0.5 },\r\n    spotLightPenumbra: { label: \"Penumbra\", value: 0.5 },\r\n    spotLightPosition: { label: \"Position XZ\", value: { x: -4, z: -4 } },\r\n    spotLightTarget: { label: \"Target XZ\", value: { x: 0, z: 0 } },\r\n  });\r\n\r\n  const { scene } = useThree();\r\n  const target = new Object3D();\r\n  scene.add(target);\r\n\r\n  const directionalLightRef = useRef();\r\n  const pointLightRef = useRef();\r\n  const spotLightRef = useRef();\r\n  const helperSize = 0.5;\r\n\r\n  useHelper(\r\n    directionalLightRef,\r\n    DirectionalLightHelper,\r\n    helperSize,\r\n    directionalLightColor,\r\n  );\r\n  useHelper(pointLightRef, PointLightHelper, helperSize, pointLightColor);\r\n  useHelper(spotLightRef, SpotLightHelper, spotLightColor);\r\n\r\n  useFrame(() => {\r\n    target.translateX(spotLightTarget.x);\r\n    target.translateZ(spotLightTarget.z);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <ambientLight color={0xffffff} intensity={0.1} />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color={directionalLightColor}\r\n        intensity={directionalLightIntensity}\r\n        position={[directionalLightPosition.x, 4, directionalLightPosition.z]}\r\n        ref={directionalLightRef}\r\n      />\r\n      <pointLight\r\n        castShadow={true}\r\n        color={pointLightColor}\r\n        intensity={pointLightIntensity}\r\n        position={[pointLightPosition.x, 1, pointLightPosition.z]}\r\n        ref={pointLightRef}\r\n      />\r\n      <spotLight\r\n        angle={MathUtils.degToRad(30)}\r\n        castShadow={true}\r\n        color={spotLightColor}\r\n        intensity={spotLightIntensity}\r\n        penumbra={spotLightPenumbra}\r\n        position={[spotLightPosition.x, 4, spotLightPosition.z]}\r\n        ref={spotLightRef}\r\n        target={target}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LightingGui;\r\n","const LightingStudio = () => {\r\n  return (\r\n    <>\r\n      <ambientLight intensity={0.1} />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color=\"hsl(0, 0%, 100%)\"\r\n        intensity={0.4}\r\n        position={[0, 2, 4]}\r\n      />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color=\"hsl(210, 100%, 70%)\"\r\n        intensity={0.4}\r\n        position={[-4, 0, 0]}\r\n      />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color=\"hsl(30, 100%, 70%)\"\r\n        intensity={0.4}\r\n        position={[4, 0, 0]}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LightingStudio;\r\n","import { useRef } from \"react\";\r\nimport { DirectionalLightHelper } from \"three\";\r\nimport { useHelper } from \"@react-three/drei\";\r\nimport { useControls } from \"leva\";\r\n\r\nconst LightingStudioGui = () => {\r\n  const { ambientLightIntensity } = useControls(\"Lighting - Ambient Light\", {\r\n    ambientLightIntensity: { label: \"Intensity\", max: 5, min: 0, value: 0.1 },\r\n  });\r\n  const { frontLightColor, frontLightIntensity } = useControls(\r\n    \"Lighting - Front Light\",\r\n    {\r\n      frontLightColor: { label: \"Color\", value: \"hsl(0, 0%, 100%)\" },\r\n      frontLightIntensity: {\r\n        label: \"Intensity\",\r\n        max: 2,\r\n        min: 0,\r\n        value: 0.4,\r\n      },\r\n    },\r\n  );\r\n  const { leftLightColor, leftLightIntensity } = useControls(\r\n    \"Lighting - Left Light\",\r\n    {\r\n      leftLightColor: { label: \"Color\", value: \"hsl(210, 100%, 70%)\" },\r\n      leftLightIntensity: {\r\n        label: \"Intensity\",\r\n        max: 2,\r\n        min: 0,\r\n        value: 1,\r\n      },\r\n    },\r\n  );\r\n  const { rightLightColor, rightLightIntensity } = useControls(\r\n    \"Lighting - Right Light\",\r\n    {\r\n      rightLightColor: { label: \"Color\", value: \"hsl(30, 100%, 70%)\" },\r\n      rightLightIntensity: {\r\n        label: \"Intensity\",\r\n        max: 2,\r\n        min: 0,\r\n        value: 1,\r\n      },\r\n    },\r\n  );\r\n\r\n  const frontLightRef = useRef();\r\n  const leftLightRef = useRef();\r\n  const rightLightRef = useRef();\r\n  const helperSize = 0.5;\r\n\r\n  useHelper(frontLightRef, DirectionalLightHelper, helperSize, frontLightColor);\r\n  useHelper(leftLightRef, DirectionalLightHelper, helperSize, leftLightColor);\r\n  useHelper(rightLightRef, DirectionalLightHelper, helperSize, rightLightColor);\r\n\r\n  return (\r\n    <>\r\n      <ambientLight intensity={ambientLightIntensity} />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color={frontLightColor}\r\n        intensity={frontLightIntensity}\r\n        position={[0, 2, 4]}\r\n        ref={frontLightRef}\r\n      />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color={leftLightColor}\r\n        intensity={leftLightIntensity}\r\n        position={[-4, 0, 0]}\r\n        ref={leftLightRef}\r\n      />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color={rightLightColor}\r\n        intensity={rightLightIntensity}\r\n        position={[4, 0, 0]}\r\n        ref={rightLightRef}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LightingStudioGui;\r\n","const LightingThreePoint = () => {\r\n  return (\r\n    <>\r\n      <ambientLight intensity={0.1} />\r\n      <spotLight\r\n        // Back Light\r\n        castShadow={true}\r\n        color=\"hsl(0, 0%, 70%)\"\r\n        intensity={0.75}\r\n        position={[4, 2, -4]}\r\n      />\r\n      <spotLight\r\n        // Fill Light\r\n        castShadow={true}\r\n        color=\"hsl(210, 100%, 70%)\"\r\n        intensity={0.75}\r\n        position={[-4, 2, 4]}\r\n      />\r\n      <spotLight\r\n        // Key Light\r\n        castShadow={true}\r\n        color=\"hsl(30, 100%, 70%)\"\r\n        intensity={0.75}\r\n        position={[4, 2, 4]}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LightingThreePoint;\r\n","import { useRef } from \"react\";\r\nimport { SpotLightHelper } from \"three\";\r\nimport { useControls } from \"leva\";\r\nimport { useHelper } from \"@react-three/drei\";\r\n\r\nconst LightingThreePointGui = () => {\r\n  const { backLightColor, backLightIntensity } = useControls(\r\n    \"Lighting - Back Light\",\r\n    {\r\n      backLightColor: { label: \"Color\", value: \"hsl(0, 0%, 70%)\" },\r\n      backLightIntensity: { label: \"Intensity\", max: 20, min: 0, value: 0.75 },\r\n    },\r\n  );\r\n  const { fillLightColor, fillLightIntensity } = useControls(\r\n    \"Lighting - Fill Light\",\r\n    {\r\n      fillLightColor: { label: \"Color\", value: \"hsl(210, 100%, 70%)\" },\r\n      fillLightIntensity: { label: \"Intensity\", max: 20, min: 0, value: 0.75 },\r\n    },\r\n  );\r\n  const { keyLightColor, keyLightIntensity } = useControls(\r\n    \"Lighting - Key Light\",\r\n    {\r\n      keyLightColor: { label: \"Color\", value: \"hsl(30, 100%, 70%)\" },\r\n      keyLightIntensity: { label: \"Intensity\", max: 20, min: 0, value: 0.75 },\r\n    },\r\n  );\r\n\r\n  const backLightRef = useRef();\r\n  const fillLightRef = useRef();\r\n  const keyLightRef = useRef();\r\n\r\n  useHelper(backLightRef, SpotLightHelper, backLightColor);\r\n  useHelper(fillLightRef, SpotLightHelper, fillLightColor);\r\n  useHelper(keyLightRef, SpotLightHelper, keyLightColor);\r\n\r\n  return (\r\n    <>\r\n      <ambientLight intensity={0.1} />\r\n      <spotLight\r\n        // Back Light\r\n        castShadow={true}\r\n        color={backLightColor}\r\n        intensity={backLightIntensity}\r\n        position={[4, 2, -4]}\r\n        ref={backLightRef}\r\n      />\r\n      <spotLight\r\n        // Fill Light\r\n        castShadow={true}\r\n        color={fillLightColor}\r\n        intensity={fillLightIntensity}\r\n        position={[-4, 2, 4]}\r\n        ref={fillLightRef}\r\n      />\r\n      <spotLight\r\n        // Key Light\r\n        castShadow={true}\r\n        color={keyLightColor}\r\n        intensity={keyLightIntensity}\r\n        position={[4, 2, 4]}\r\n        ref={keyLightRef}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LightingThreePointGui;\r\n","import { Suspense } from \"react\";\r\nimport { OrbitControls, Stats } from \"@react-three/drei\";\r\nimport { useControls } from \"leva\";\r\n\r\n// Components\r\nimport Animation from \"./components/Animation\";\r\nimport Cube from \"./components/Cube\";\r\nimport ClockAnalogue from \"./components/Clock/Analogue\";\r\nimport ClockDigital from \"./components/Clock/Digital\";\r\nimport Image from \"./components/Image\";\r\nimport ImageSvg from \"./components/Image/Svg\";\r\nimport LoremIpsum from \"./components/LoremIpsum\";\r\nimport Normals from \"./components/Normals\";\r\nimport Suzanne from \"./components/Suzanne\";\r\nimport SuzanneMatcapTexture from \"./components/Suzanne/MatcapTexture\";\r\nimport SuzanneNormalTexture from \"./components/Suzanne/NormalTexture\";\r\nimport SuzannePhysicalMaterial from \"./components/Suzanne/PhysicalMaterial\";\r\nimport SuzanneStandardMaterial from \"./components/Suzanne/StandardMaterial\";\r\nimport SuzanneToonMaterial from \"./components/Suzanne/ToonMaterial\";\r\n\r\n// Lighting\r\nimport Lighting from \"./components/Lighting\";\r\nimport LightingGui from \"./components/Lighting/indexGui\";\r\nimport LightingStudio from \"./components/Lighting/Studio\";\r\nimport LightingStudioGui from \"./components/Lighting/StudioGui\";\r\nimport LightingThreePoint from \"./components/Lighting/ThreePoint\";\r\nimport LightingThreePointGui from \"./components/Lighting/ThreePointGui\";\r\n\r\nconst components = [\r\n  \"Animation\",\r\n  \"Cube\",\r\n  \"ClockAnalogue\",\r\n  \"ClockDigital\",\r\n  \"Image\",\r\n  \"ImageSvg\",\r\n  \"LoremIpsum\",\r\n  \"Normals\",\r\n  \"Suzanne\",\r\n  \"SuzanneMatcapTexture\",\r\n  \"SuzanneNormalTexture\",\r\n  \"SuzannePhysicalMaterial\",\r\n  \"SuzanneStandardMaterial\",\r\n  \"SuzanneToonMaterial\",\r\n];\r\n\r\nconst lightings = [\"None\", \"Default\", \"Studio\", \"ThreePoint\"];\r\n\r\nconst Content = () => {\r\n  const { showStats } = useControls(\"General\", {\r\n    showStats: {\r\n      label: \"Stats\",\r\n      value: false,\r\n    },\r\n  });\r\n\r\n  const {\r\n    showAxesHelper,\r\n    showGridHelper,\r\n    useComponent,\r\n    useLighting,\r\n    useLightingGui,\r\n  } = useControls(\"Helpers\", {\r\n    showAxesHelper: {\r\n      label: \"Axes Helper\",\r\n      value: false,\r\n    },\r\n    showGridHelper: {\r\n      label: \"Grid Helper\",\r\n      value: false,\r\n    },\r\n    useComponent: {\r\n      label: \"Component\",\r\n      options: components,\r\n      value: \"Cube\",\r\n    },\r\n    useLighting: {\r\n      label: \"Lighting\",\r\n      options: lightings,\r\n      value: \"Studio\",\r\n    },\r\n    useLightingGui: {\r\n      label: \"Lighting GUI\",\r\n      value: false,\r\n    },\r\n  });\r\n\r\n  function showComponent(name) {\r\n    return useComponent === name;\r\n  }\r\n\r\n  function showLighting(name) {\r\n    return useLighting === name;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <OrbitControls enablePan={true} enableRotate={true} enableZoom={true} />\r\n      {showAxesHelper && <axesHelper />}\r\n      {showGridHelper && <gridHelper />}\r\n      {showStats && <Stats />}\r\n\r\n      {showLighting(\"Default\") && !useLightingGui && <Lighting />}\r\n      {showLighting(\"Default\") && useLightingGui && <LightingGui />}\r\n      {showLighting(\"Studio\") && !useLightingGui && <LightingStudio />}\r\n      {showLighting(\"Studio\") && useLightingGui && <LightingStudioGui />}\r\n      {showLighting(\"ThreePoint\") && !useLightingGui && <LightingThreePoint />}\r\n      {showLighting(\"ThreePoint\") && useLightingGui && (\r\n        <LightingThreePointGui />\r\n      )}\r\n\r\n      {showComponent(\"Cube\") && <Cube />}\r\n      {showComponent(\"ClockAnalogue\") && <ClockAnalogue />}\r\n      {showComponent(\"ClockDigital\") && <ClockDigital />}\r\n      <Suspense fallback={null}>\r\n        {showComponent(\"Animation\") && <Animation />}\r\n        {showComponent(\"Image\") && <Image />}\r\n        {showComponent(\"ImageSvg\") && <ImageSvg />}\r\n        {showComponent(\"LoremIpsum\") && <LoremIpsum />}\r\n        {showComponent(\"Normals\") && <Normals />}\r\n        {showComponent(\"Suzanne\") && <Suzanne />}\r\n        {showComponent(\"SuzanneMatcapTexture\") && <SuzanneMatcapTexture />}\r\n        {showComponent(\"SuzanneNormalTexture\") && <SuzanneNormalTexture />}\r\n        {showComponent(\"SuzannePhysicalMaterial\") && (\r\n          <SuzannePhysicalMaterial />\r\n        )}\r\n        {showComponent(\"SuzanneStandardMaterial\") && (\r\n          <SuzanneStandardMaterial />\r\n        )}\r\n        {showComponent(\"SuzanneToonMaterial\") && <SuzanneToonMaterial />}\r\n      </Suspense>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import { Canvas } from \"@react-three/fiber\";\r\n\r\nimport Content from \"./Content\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Canvas>\r\n      <Content linear={false} shadows={true} />\r\n    </Canvas>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\"),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}